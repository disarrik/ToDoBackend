/*
 * This file is generated by jOOQ.
 */
package ru.disarra.todo.jooq.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.disarra.todo.jooq.tables.Task;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskRecord extends UpdatableRecordImpl<TaskRecord> implements Record5<Long, String, String, Long, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.task.id</code>.
     */
    public TaskRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.task.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.task.name</code>.
     */
    public TaskRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.task.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.task.description</code>.
     */
    public TaskRecord setDescription(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.task.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.task.group_id</code>.
     */
    public TaskRecord setGroupId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.task.group_id</code>.
     */
    public Long getGroupId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.task.deadline</code>.
     */
    public TaskRecord setDeadline(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.task.deadline</code>.
     */
    public LocalDateTime getDeadline() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, Long, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, Long, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Task.TASK.ID;
    }

    @Override
    public Field<String> field2() {
        return Task.TASK.NAME;
    }

    @Override
    public Field<String> field3() {
        return Task.TASK.DESCRIPTION;
    }

    @Override
    public Field<Long> field4() {
        return Task.TASK.GROUP_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Task.TASK.DEADLINE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Long component4() {
        return getGroupId();
    }

    @Override
    public LocalDateTime component5() {
        return getDeadline();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public Long value4() {
        return getGroupId();
    }

    @Override
    public LocalDateTime value5() {
        return getDeadline();
    }

    @Override
    public TaskRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TaskRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TaskRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TaskRecord value4(Long value) {
        setGroupId(value);
        return this;
    }

    @Override
    public TaskRecord value5(LocalDateTime value) {
        setDeadline(value);
        return this;
    }

    @Override
    public TaskRecord values(Long value1, String value2, String value3, Long value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskRecord
     */
    public TaskRecord() {
        super(Task.TASK);
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(Long id, String name, String description, Long groupId, LocalDateTime deadline) {
        super(Task.TASK);

        setId(id);
        setName(name);
        setDescription(description);
        setGroupId(groupId);
        setDeadline(deadline);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TaskRecord
     */
    public TaskRecord(ru.disarra.todo.jooq.tables.pojos.Task value) {
        super(Task.TASK);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setGroupId(value.getGroupId());
            setDeadline(value.getDeadline());
            resetChangedOnNotNull();
        }
    }
}
