/*
 * This file is generated by jOOQ.
 */
package ru.disarra.todo.jooq.tables.records;


import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ru.disarra.todo.jooq.tables.UserGroup;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserGroupRecord extends UpdatableRecordImpl<UserGroupRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.user_group.user_id</code>.
     */
    public UserGroupRecord setUserId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.user_group.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.user_group.group_id</code>.
     */
    public UserGroupRecord setGroupId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.user_group.group_id</code>.
     */
    public Long getGroupId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserGroup.USER_GROUP.USER_ID;
    }

    @Override
    public Field<Long> field2() {
        return UserGroup.USER_GROUP.GROUP_ID;
    }

    @Override
    public Long component1() {
        return getUserId();
    }

    @Override
    public Long component2() {
        return getGroupId();
    }

    @Override
    public Long value1() {
        return getUserId();
    }

    @Override
    public Long value2() {
        return getGroupId();
    }

    @Override
    public UserGroupRecord value1(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserGroupRecord value2(Long value) {
        setGroupId(value);
        return this;
    }

    @Override
    public UserGroupRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserGroupRecord
     */
    public UserGroupRecord() {
        super(UserGroup.USER_GROUP);
    }

    /**
     * Create a detached, initialised UserGroupRecord
     */
    public UserGroupRecord(Long userId, Long groupId) {
        super(UserGroup.USER_GROUP);

        setUserId(userId);
        setGroupId(groupId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserGroupRecord
     */
    public UserGroupRecord(ru.disarra.todo.jooq.tables.pojos.UserGroup value) {
        super(UserGroup.USER_GROUP);

        if (value != null) {
            setUserId(value.getUserId());
            setGroupId(value.getGroupId());
            resetChangedOnNotNull();
        }
    }
}
