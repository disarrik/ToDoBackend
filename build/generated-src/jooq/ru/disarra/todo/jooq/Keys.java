/*
 * This file is generated by jOOQ.
 */
package ru.disarra.todo.jooq;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.disarra.todo.jooq.tables.Databasechangeloglock;
import ru.disarra.todo.jooq.tables.Group;
import ru.disarra.todo.jooq.tables.Task;
import ru.disarra.todo.jooq.tables.TaskStatus;
import ru.disarra.todo.jooq.tables.User;
import ru.disarra.todo.jooq.tables.UserGroup;
import ru.disarra.todo.jooq.tables.records.DatabasechangeloglockRecord;
import ru.disarra.todo.jooq.tables.records.GroupRecord;
import ru.disarra.todo.jooq.tables.records.TaskRecord;
import ru.disarra.todo.jooq.tables.records.TaskStatusRecord;
import ru.disarra.todo.jooq.tables.records.UserGroupRecord;
import ru.disarra.todo.jooq.tables.records.UserRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<GroupRecord> GROUP_PKEY = Internal.createUniqueKey(Group.GROUP, DSL.name("group_pkey"), new TableField[] { Group.GROUP.ID }, true);
    public static final UniqueKey<TaskRecord> TASK_PKEY = Internal.createUniqueKey(Task.TASK, DSL.name("task_pkey"), new TableField[] { Task.TASK.ID }, true);
    public static final UniqueKey<TaskStatusRecord> TASK_STATUS_PKEY = Internal.createUniqueKey(TaskStatus.TASK_STATUS, DSL.name("task_status_pkey"), new TableField[] { TaskStatus.TASK_STATUS.TASK_ID, TaskStatus.TASK_STATUS.USER_ID }, true);
    public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, DSL.name("user_pkey"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<UserRecord> USER_UNIQUE_LOGIN_CONSTRAINT = Internal.createUniqueKey(User.USER, DSL.name("user_unique_login_constraint"), new TableField[] { User.USER.LOGIN }, true);
    public static final UniqueKey<UserGroupRecord> USER_GROUP_PKEY = Internal.createUniqueKey(UserGroup.USER_GROUP, DSL.name("user_group_pkey"), new TableField[] { UserGroup.USER_GROUP.USER_ID, UserGroup.USER_GROUP.GROUP_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<GroupRecord, UserRecord> GROUP__GROUP_ADMIN_ID_FKEY = Internal.createForeignKey(Group.GROUP, DSL.name("group_admin_id_fkey"), new TableField[] { Group.GROUP.ADMIN_ID }, Keys.USER_PKEY, new TableField[] { User.USER.ID }, true);
    public static final ForeignKey<TaskRecord, GroupRecord> TASK__TASK_GROUP_ID_FKEY = Internal.createForeignKey(Task.TASK, DSL.name("task_group_id_fkey"), new TableField[] { Task.TASK.GROUP_ID }, Keys.GROUP_PKEY, new TableField[] { Group.GROUP.ID }, true);
}
